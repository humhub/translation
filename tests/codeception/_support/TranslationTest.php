<?php

namespace translation;

use humhub\modules\space\models\Space;
use humhub\modules\translation\models\BasePath;
use humhub\modules\translation\models\TranslationLog;
use tests\codeception\_support\HumHubDbTestCase;
use Yii;

/**
 * Class TranslationTest
 * @package translation
 *
 * Some test messages:
 *
 * Yii::t('TranslationModule.test', 'This is a test');
 * Yii::t('TranslationModule.test', 'This is a <strong>html</strong> test')
 * Yii::t('TranslationModule.test', '& Entitiy test')
 * Yii::t('TranslationModule.test', 'Parameter {test}')
 */
class TranslationTest extends HumHubDbTestCase
{
    /**
     * @var BasePath
     */
    public $basePath;

    /**
     * @var string
     */
    public $testMessage;

    /**
     * @var string
     */
    public $testMessageTID;

    public const TEST_MESSAGE = 'This is a test';

    public $initialTranslationSate = [
        'de' => [
            self::TEST_MESSAGE => '',
        ],
    ];

    protected function messages()
    {
        Yii::t('TranslationModule.test', self::TEST_MESSAGE);
    }

    public function _before()
    {
        parent::_before(); // TODO: Change the autogenerated stub
        $this->basePath = BasePath::getBasePath('translation');

        $this->setTrnaslationState($this->initialTranslationSate);

        $this->testMessage = self::TEST_MESSAGE;
        $this->testMessageTID = TranslationLog::tid($this->testMessage);

        $space = Space::findOne(['id' => 1]);
        $this->assertNotFalse($space->updateAttributes(['name' => 'DE']));
    }

    protected function setTrnaslationState($state)
    {
        foreach ($state as $lang => $messages) {
            $this->basePath->getMessageFile('test')->updateTranslations($lang, $messages);
        }
    }


    protected function assertEqualAlias($actual, $expected)
    {
        $this->assertEquals($this->replaceSeperator(Yii::getAlias($actual)), $this->replaceSeperator(Yii::getAlias($expected)));
    }

    protected function replaceSeperator($path)
    {
        return str_replace(['/', '\\'], DIRECTORY_SEPARATOR, Yii::getAlias($path));
    }
}
